<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jack.security.persistence.FriendGroupMapper">
    <sql id="findFriendGroup_sql">
        SELECT
        DISTINCT
        g.group_id,
        g.group_name,
        g.group_priority,
        g.user_id,
        g.create_by,
        g.create_date,
        g.update_by,
        g.update_date,
        u.id,
        u.user_name,
        u.tel_no,
        u.qq_no,
        u.email,
        u.login_state,
        u.headpic_path,
        f.user_id,
        f.friend_comment_name
        FROM  bpj_friend_group g
        LEFT JOIN bpj_friend f on f.user_id = g.user_id and f.friend_group_id = g.group_id
        LEFT JOIN security_user u on f.friend_user_id = u.id
    </sql>


    <sql id="findFriendGroup_sql_1">
        SELECT
        DISTINCT
        g.group_id,
        g.group_name,
        g.group_priority,
        g.user_id,
        g.create_by,
        g.create_date,
        g.update_by,
        g.update_date
        FROM  bpj_friend_group g
        <where>
            <trim suffixOverrides="AND">
                g.is_deleted = 0 and
                g.user_id = #{pojo.userId} and
                <if test="pojo.groupName != null and pojo.groupName != ''">
                    g.group_name like CONCAT(CONCAT('%', #{pojo.groupName}),'%') and
                </if>
                <if test="pojo.groupId != null and pojo.groupId != ''">
                    g.group_id = #{pojo.groupId} and
                </if>
            </trim>
        </where>
    </sql>

    <resultMap type="FriendGroup" id="resultFriendGroup">
        <id property="groupId" column="group_id"/>
        <result column="group_name" property="groupName"/>
        <result column="group_priority" property="groupPriority"/>
        <result column="user_id" property="userId"/>
        <result property="updatedDate" column="update_date"/>
        <result property="updatedBy" column="update_by"/>
        <result property="createdDate" column="create_date"/>
        <result property="createdBy" column="create_by"/>
        <collection property="friends" ofType="Friend">
            <result column="friend_comment_name" property="friendCommentName"/>
            <result column="user_id" property="userId"/>
            <association property="userFriend" javaType="SecurityUser">
                <result column="id" property="id"/>
                <result property="headPicPath" column="headpic_path"/>
                <result column="user_name" property="userName"/>
                <result column="tel_no" property="phone"/>
                <result column="qq_no" property="tencentNo"/>
                <result column="email" property="email"/>
                <result column="login_state" property="loginState"/>
            </association>
        </collection>
    </resultMap>


    <select id="findPageGroup" resultMap="resultFriendGroup">
        <include refid="Pager.paginationStart"/>
        <include refid="findFriendGroup_sql_1" />
        <include refid="Pager.paginationEnd"/>
    </select>

    <select id="findAllFriendsByGroup" parameterType="string" resultMap="resultFriendGroup">
        <include refid="findFriendGroup_sql" />
        <where>
            g.user_id = #{userId}
            and g.is_deleted = 0
        </where>
        ORDER BY g.group_priority
    </select>

    <select id="findGroupCount"  resultType="int">
        <include refid="Pager.countStart"/>
        <include refid="findFriendGroup_sql_1" />
        <include refid="Pager.countEnd"/>
    </select>
    <select id="findGroup"  resultMap="resultFriendGroup">
        <include refid="findFriendGroup_sql_1" />
    </select>
    <insert id="save" parameterType="FriendGroup">
        <selectKey keyProperty="pojo.groupId" resultType="String" order="BEFORE">
            select UUID_SHORT()
        </selectKey>
        INSERT INTO bpj_friend_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            group_id,
            <if test="pojo.groupName != null and pojo.groupName !=''">
                group_name,
            </if>
            <if test="pojo.groupPriority != null and pojo.groupPriority !=''">
                group_priority,
            </if>
            <if test="pojo.userId != null and pojo.userId !=''">
                user_id,
            </if>
            <if test="pojo.createdDate != null">
                create_date,
            </if>
            <if test="pojo.createdBy != null">
                create_by,
            </if>
            <if test="pojo.updatedDate != null">
                update_date,
            </if>
            <if test="pojo.updatedBy != null">
                update_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{pojo.groupId},
            <if test="pojo.groupName != null and pojo.groupName !=''">
                #{pojo.groupName},
            </if>
            <if test="pojo.groupPriority != null and pojo.groupPriority !=''">
                #{pojo.groupPriority},
            </if>
            <if test="pojo.userId != null and pojo.userId !=''">
                #{pojo.userId},
            </if>
            <if test="pojo.createdDate != null">
                #{pojo.createdDate},
            </if>
            <if test="pojo.createdBy != null">
                #{pojo.createdBy},
            </if>
            <if test="pojo.updatedDate != null">
                #{pojo.updatedDate},
            </if>
            <if test="pojo.updatedBy != null">
                #{pojo.updatedBy}
            </if>
        </trim>
    </insert>


    <update id="update">
        UPDATE bpj_friend_group
        <set>
            <if test="pojo.groupName != null and pojo.groupName !=''">
                group_name=#{pojo.groupName},
            </if>
            <if test="pojo.groupPriority != null and pojo.groupPriority !=''">
                group_priority=#{pojo.groupPriority},
            </if>
            <if test="pojo.updatedBy != null">
                update_by=#{pojo.updatedBy},
            </if>
            <if test="pojo.updatedDate != null">
                update_date=#{pojo.updatedDate}
            </if>
        </set>
        <where>
            group_id=#{pojo.groupId} and user_id = #{pojo.userId}
        </where>
    </update>

    <delete id="remove" parameterType="FriendGroup">
        UPDATE bpj_friend_group
        <set>
            is_deleted = 1
        </set>
        <where>
            user_id = #{pojo.userId} and
            group_id = #{pojo.groupId}
        </where>
    </delete>

</mapper>